import { useEffect, useState } from "react";
import API from "../../services/api";
import toast from "react-hot-toast";

export default function AdminPayments() {
  const [payments, setPayments] = useState([]);

  const fetchPayments = async () => {
    try {
      const res = await API.get("/payments");
      setPayments(res.data);
    } catch {
      toast.error("‚ùå L·ªói khi t·∫£i danh s√°ch thanh to√°n");
    }
  };

  useEffect(() => {
    fetchPayments();
  }, []);

  const handleUpdate = async (id, status) => {
    try {
      await API.put(`/payments/${id}`, { status });
      toast.success("‚úÖ ƒê√£ c·∫≠p nh·∫≠t tr·∫°ng th√°i");
      fetchPayments();
    } catch {
      toast.error("‚ùå C·∫≠p nh·∫≠t th·∫•t b·∫°i");
    }
  };

  const handleDelete = async (id) => {
    if (confirm("B·∫°n c√≥ ch·∫Øc mu·ªën x√≥a thanh to√°n n√†y kh√¥ng?")) {
      await API.delete(`/payments/${id}`);
      toast.success("üóëÔ∏è ƒê√£ x√≥a thanh to√°n");
      fetchPayments();
    }
  };

  return (
    <div className="p-6 space-y-4">
      <h1 className="text-2xl font-bold text-gray-700">
        üí≥ Qu·∫£n l√Ω thanh to√°n
      </h1>

      <div className="overflow-x-auto bg-white rounded-lg shadow">
        <table className="w-full border-collapse border border-gray-200 text-sm">
          <thead className="bg-blue-600 text-white">
            <tr>
              <th className="p-3">M√£ v·∫≠n ƒë∆°n</th>
              <th className="p-3">Kh√°ch h√†ng</th>
              <th className="p-3">S·ªë ti·ªÅn</th>
              <th className="p-3">Ph∆∞∆°ng th·ª©c</th>
              <th className="p-3">Tr·∫°ng th√°i</th>
              <th className="p-3">Ng√†y t·∫°o</th>
              <th className="p-3">Thao t√°c</th>
            </tr>
          </thead>
          <tbody>
            {payments.map((p) => (
              <tr key={p.id} className="border-b hover:bg-gray-50">
                <td className="p-3">{p.tracking_code}</td>
                <td className="p-3">{p.customer_name}</td>
                <td className="p-3">{p.amount.toLocaleString()} ‚Ç´</td>
                <td className="p-3">
                  {p.method === "COD"
                    ? "Thanh to√°n khi nh·∫≠n h√†ng"
                    : p.method === "Momo"
                    ? "V√≠ Momo"
                    : "Chuy·ªÉn kho·∫£n"}
                </td>
                <td className="p-3">
                  <select
                    value={p.status}
                    onChange={(e) => handleUpdate(p.id, e.target.value)}
                    className={`border rounded px-2 py-1 ${
                      p.status === "completed"
                        ? "text-green-600"
                        : p.status === "pending"
                        ? "text-yellow-500"
                        : "text-red-500"
                    }`}
                  >
                    <option value="pending">ƒêang x·ª≠ l√Ω</option>
                    <option value="completed">Ho√†n t·∫•t</option>
                    <option value="failed">Th·∫•t b·∫°i</option>
                  </select>
                </td>
                <td className="p-3 text-gray-500">
                  {new Date(p.created_at).toLocaleString("vi-VN")}
                </td>
                <td className="p-3 text-center">
                  <button
                    onClick={() => handleDelete(p.id)}
                    className="bg-red-500 hover:bg-red-600 text-white px-3 py-1 rounded"
                  >
                    X√≥a
                  </button>
                </td>
              </tr>
            ))}
            {payments.length === 0 && (
              <tr>
                <td
                  colSpan="7"
                  className="p-6 text-center text-gray-500 italic"
                >
                  Kh√¥ng c√≥ d·ªØ li·ªáu thanh to√°n
                </td>
              </tr>
            )}
          </tbody>
        </table>
      </div>
    </div>
  );
}
