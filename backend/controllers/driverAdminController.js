import db from "../config/db.js";

// üìã L·∫•y t·∫•t c·∫£ t√†i x·∫ø
export const getAllDrivers = async (req, res) => {
  try {
    const [rows] = await db.query(`
  SELECT 
    d.id,
    d.name,
    d.email,
    d.phone,
    d.status,
    v.plate_no,
    v.type AS vehicle_type,
    v.status AS vehicle_status
  FROM drivers d
  LEFT JOIN vehicles v ON d.vehicle_id = v.id
  ORDER BY d.id DESC
`);
    res.json(rows);
  } catch (err) {
    console.error("‚ùå L·ªói getAllDrivers:", err);
    res.status(500).json({ message: "L·ªói khi l·∫•y danh s√°ch t√†i x·∫ø" });
  }
};

// üîç L·∫•y chi ti·∫øt t√†i x·∫ø theo id
export const getDriverById = async (req, res) => {
  try {
    const [rows] = await db.query("SELECT * FROM drivers WHERE id=?", [
      req.params.id,
    ]);
    if (rows.length === 0)
      return res.status(404).json({ message: "Kh√¥ng t√¨m th·∫•y t√†i x·∫ø" });
    res.json(rows[0]);
  } catch (err) {
    console.error("‚ùå L·ªói getDriverById:", err);
    res.status(500).json({ message: "L·ªói khi l·∫•y t√†i x·∫ø" });
  }
};

// ‚ûï Th√™m t√†i x·∫ø m·ªõi
export const createDriver = async (req, res) => {
  try {
    const { name, email, phone, vehicle_type, status } = req.body;
    await db.query(
      "INSERT INTO drivers (name, email, phone, vehicle_type, status, created_at) VALUES (?, ?, ?, ?, ?, NOW())",
      [name, email, phone, vehicle_type, status || "available"]
    );
    res.json({ message: "‚úÖ ƒê√£ th√™m t√†i x·∫ø m·ªõi" });
  } catch (err) {
    console.error("‚ùå L·ªói createDriver:", err);
    res.status(500).json({ message: "L·ªói khi th√™m t√†i x·∫ø" });
  }
};

// ‚úèÔ∏è C·∫≠p nh·∫≠t th√¥ng tin t√†i x·∫ø
export const updateDriver = async (req, res) => {
  try {
    const { name, email, phone, vehicle_type, status } = req.body;
    await db.query(
      "UPDATE drivers SET name=?, email=?, phone=?, vehicle_type=?, status=?, updated_at=NOW() WHERE id=?",
      [name, email, phone, vehicle_type, status, req.params.id]
    );
    res.json({ message: "‚úÖ C·∫≠p nh·∫≠t t√†i x·∫ø th√†nh c√¥ng" });
  } catch (err) {
    console.error("‚ùå L·ªói updateDriver:", err);
    res.status(500).json({ message: "L·ªói khi c·∫≠p nh·∫≠t t√†i x·∫ø" });
  }
};

// ‚ùå X√≥a t√†i x·∫ø
export const deleteDriver = async (req, res) => {
  try {
    await db.query("DELETE FROM drivers WHERE id=?", [req.params.id]);
    res.json({ message: "üóëÔ∏è ƒê√£ x√≥a t√†i x·∫ø" });
  } catch (err) {
    console.error("‚ùå L·ªói deleteDriver:", err);
    res.status(500).json({ message: "L·ªói khi x√≥a t√†i x·∫ø" });
  }
};

// üîÑ C·∫≠p nh·∫≠t tr·∫°ng th√°i t√†i x·∫ø
export const updateDriverStatus = async (req, res) => {
  try {
    const { status } = req.body;
    await db.query("UPDATE drivers SET status=? WHERE id=?", [
      status,
      req.params.id,
    ]);
    res.json({ message: "‚úÖ C·∫≠p nh·∫≠t tr·∫°ng th√°i th√†nh c√¥ng" });
  } catch (err) {
    console.error("‚ùå L·ªói updateDriverStatus:", err);
    res.status(500).json({ message: "L·ªói khi c·∫≠p nh·∫≠t tr·∫°ng th√°i" });
  }
};
