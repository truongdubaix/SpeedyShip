import db from "../config/db.js";

// üì¶ L·∫•y to√†n b·ªô danh s√°ch t√†i x·∫ø
export const getAllDrivers = async (req, res) => {
  try {
    const [rows] = await db.query("SELECT * FROM drivers ORDER BY id DESC");
    res.json(rows);
  } catch (err) {
    res
      .status(500)
      .json({ message: "L·ªói khi l·∫•y danh s√°ch t√†i x·∫ø", error: err });
  }
};

// ‚ûï Th√™m t√†i x·∫ø m·ªõi
export const createDriver = async (req, res) => {
  const { name, email, phone, license_no, vehicle_type, status } = req.body;
  try {
    await db.query(
      "INSERT INTO drivers (name, email, phone, license_no, vehicle_type, status) VALUES (?, ?, ?, ?, ?, ?)",
      [name, email, phone, license_no, vehicle_type, status]
    );
    res.json({ message: "Th√™m t√†i x·∫ø th√†nh c√¥ng" });
  } catch (err) {
    res.status(500).json({ message: "L·ªói khi th√™m t√†i x·∫ø", error: err });
  }
};

// ‚úèÔ∏è C·∫≠p nh·∫≠t th√¥ng tin t√†i x·∫ø
export const updateDriver = async (req, res) => {
  const { id } = req.params;
  const { name, email, phone, license_no, vehicle_type, status } = req.body;
  try {
    await db.query(
      "UPDATE drivers SET name=?, email=?, phone=?, license_no=?, vehicle_type=?, status=? WHERE id=?",
      [name, email, phone, license_no, vehicle_type, status, id]
    );
    res.json({ message: "C·∫≠p nh·∫≠t th√†nh c√¥ng" });
  } catch (err) {
    res.status(500).json({ message: "L·ªói khi c·∫≠p nh·∫≠t t√†i x·∫ø", error: err });
  }
};

// ‚ùå X√≥a t√†i x·∫ø
export const deleteDriver = async (req, res) => {
  const { id } = req.params;
  try {
    await db.query("DELETE FROM drivers WHERE id = ?", [id]);
    res.json({ message: "ƒê√£ x√≥a t√†i x·∫ø" });
  } catch (err) {
    res.status(500).json({ message: "L·ªói khi x√≥a t√†i x·∫ø", error: err });
  }
};

// üîÑ C·∫≠p nh·∫≠t tr·∫°ng th√°i
export const updateDriverStatus = async (req, res) => {
  const { id } = req.params;
  const { status } = req.body;
  try {
    await db.query("UPDATE drivers SET status=? WHERE id=?", [status, id]);
    res.json({ message: "ƒê√£ c·∫≠p nh·∫≠t tr·∫°ng th√°i" });
  } catch (err) {
    res
      .status(500)
      .json({ message: "L·ªói khi c·∫≠p nh·∫≠t tr·∫°ng th√°i", error: err });
  }
};
