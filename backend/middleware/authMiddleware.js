import jwt from "jsonwebtoken";

// üß© Middleware x√°c th·ª±c JWT
export const authMiddleware = (req, res, next) => {
  const token = req.headers.authorization?.split(" ")[1];
  if (!token) {
    return res
      .status(401)
      .json({ message: "Kh√¥ng c√≥ token, t·ª´ ch·ªëi truy c·∫≠p!" });
  }

  try {
    const decoded = jwt.verify(token, process.env.JWT_SECRET);
    req.user = decoded;
    next();
  } catch {
    return res.status(403).json({ message: "Token kh√¥ng h·ª£p l·ªá!" });
  }
};

// üß© Middleware ki·ªÉm tra quy·ªÅn truy c·∫≠p theo vai tr√≤
export const roleMiddleware = (roles) => (req, res, next) => {
  if (!req.user || !roles.includes(req.user.role)) {
    return res.status(403).json({ message: "B·∫°n kh√¥ng c√≥ quy·ªÅn truy c·∫≠p!" });
  }
  next();
};
